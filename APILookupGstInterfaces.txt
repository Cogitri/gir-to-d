#
# This file is part of gtkD.
#
# gtkD is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
#
# gtkD is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with gtkD; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

#############################################
### Definitions for wrapping Gtk+ ###########
#############################################

# must start with wrap
wrap: gstinterfaces
file: /usr/share/gir-1.0/GstVideo-1.0.gir

struct: ColorBalanceChannel
noCode: true
noExternal: true

struct: ColorBalanceChannelClass
noExternal: true

struct: ColorBalance
noCode: true
noExternal: true

struct: ColorBalanceInterface
noExternal: true

struct: Navigation
noCode: true
noExternal: true

struct: NavigationInterface
noExternal: true

struct: VideoAlignment
noCode: true
noExternal: true

struct: VideoBufferPool
noCode: true
noExternal: true

struct: VideoBufferPoolClass
noExternal: true

struct: VideoBufferPoolPrivate
noExternal: true

struct: VideoChromaResample
noCode: true
noExternal: true

struct: VideoCodecFrame
noCode: true
noExternal: true

struct: VideoCodecState
noCode: true
noExternal: true

struct: VideoColorimetry
noCode: true
noExternal: true

struct: VideoCropMeta
noCode: true
noExternal: true

struct: VideoDecoder
noCode: true
noExternal: true

struct: VideoDecoderClass
noExternal: true

struct: VideoDecoderPrivate
noExternal: true

struct: VideoEncoder
noCode: true
noExternal: true

struct: VideoEncoderClass
noExternal: true

struct: VideoEncoderPrivate
noExternal: true

struct: VideoFilter
noCode: true
noExternal: true

struct: VideoFilterClass
noExternal: true

struct: VideoFormatInfo
noExternal: true

struct: VideoFrame
noCode: true
noExternal: true

struct: VideoGLTextureUploadMeta
noCode: true
noExternal: true

struct: VideoInfo
noCode: true
noExternal: true

struct: VideoMeta
noCode: true
noExternal: true

struct: VideoMetaTransform
noCode: true
noExternal: true

struct: VideoOrientation
noCode: true
noExternal: true

struct: VideoOrientationInterface
noExternal: true

struct: VideoOverlay
class: VideoOverlay
import: gstreamer.Element
code: start
	/**
	* The Element parameter should usually be
	* your videosink that you want to create your
	* XOverlay with.
	*/
	public this(Element elem)
	{
		this( cast(GstVideoOverlay*)elem.getElementStruct() );
	}
code: end

struct: VideoOverlayComposition
noCode: true
noExternal: true

struct: VideoOverlayCompositionMeta
noCode: true
noExternal: true

struct: VideoOverlayRectangle
noCode: true
noExternal: true

struct: VideoRectangle
noExternal: true

struct: VideoRegionOfInterestMeta
noCode: true
noExternal: true

struct: VideoSink
noCode: true
noExternal: true

struct: VideoSinkClass
noExternal: true

struct: VideoSinkPrivate
noExternal: true
